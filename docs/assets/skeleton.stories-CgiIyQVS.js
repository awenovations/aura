import{S as b,i as D,s as A,n as S,c as m,a as u,m as f,t as p,b as c,d,e as C}from"./index-DugT0KW2.js";import{e as T,a as V,b as E,d as g,k as h,i as $,s as w,c as v}from"./lifecycle-WtsT-gpG.js";import{g as I,a as R}from"./spread-CgU5AtxT.js";import{p as U,T as j,S as x}from"./collect-stories-BC9TIWvE.js";function q(l){let e,a;return{c(){e=T("div"),this.h()},l(n){e=V(n,"DIV",{class:!0,style:!0}),E(e).forEach(g),this.h()},h(){h(e,"class","aura-skeleton svelte-1ptdgwv"),h(e,"style",a=`--width:${l[0]}; --height: ${l[1]};`)},m(n,o){$(n,e,o)},p(n,[o]){o&3&&a!==(a=`--width:${n[0]}; --height: ${n[1]};`)&&h(e,"style",a)},i:S,o:S,d(n){n&&g(e)}}}function M(l,e,a){let{width:n="200px"}=e,{height:o="200px"}=e;return l.$$set=s=>{"width"in s&&a(0,n=s.width),"height"in s&&a(1,o=s.height)},[n,o]}class _ extends b{constructor(e){super(),D(this,e,M,q,A,{width:0,height:1})}}_.__docgen={version:3,name:"skeleton.svelte",data:[{visibility:"public",description:null,keywords:[],name:"width",kind:"let",static:!1,readonly:!1,type:{kind:"type",text:"string",type:"string"},defaultValue:"200px"},{visibility:"public",description:null,keywords:[],name:"height",kind:"let",static:!1,readonly:!1,type:{kind:"type",text:"string",type:"string"},defaultValue:"200px"}],computed:[],methods:[],components:[],description:null,keywords:[],events:[],slots:[],refs:[]};function O(l){let e,a;const n=[l[0]];let o={};for(let s=0;s<n.length;s+=1)o=C(o,n[s]);return e=new _({props:o}),{c(){m(e.$$.fragment)},l(s){u(e.$$.fragment,s)},m(s,r){f(e,s,r),a=!0},p(s,r){const t=r&1?I(n,[R(s[0])]):{};e.$set(t)},i(s){a||(p(e.$$.fragment,s),a=!0)},o(s){c(e.$$.fragment,s),a=!1},d(s){d(e,s)}}}function z(l){let e,a,n,o,s,r;return e=new j({props:{$$slots:{default:[O,({args:t})=>({0:t}),({args:t})=>t?1:0]},$$scope:{ctx:l}}}),n=new x({props:{name:"Default Skeleton"}}),s=new x({props:{name:"Custom Skeleton",args:{width:"800px",height:"300px"}}}),{c(){m(e.$$.fragment),a=w(),m(n.$$.fragment),o=w(),m(s.$$.fragment)},l(t){u(e.$$.fragment,t),a=v(t),u(n.$$.fragment,t),o=v(t),u(s.$$.fragment,t)},m(t,i){f(e,t,i),$(t,a,i),f(n,t,i),$(t,o,i),f(s,t,i),r=!0},p(t,[i]){const y={};i&3&&(y.$$scope={dirty:i,ctx:t}),e.$set(y)},i(t){r||(p(e.$$.fragment,t),p(n.$$.fragment,t),p(s.$$.fragment,t),r=!0)},o(t){c(e.$$.fragment,t),c(n.$$.fragment,t),c(s.$$.fragment,t),r=!1},d(t){t&&(g(a),g(o)),d(e,t),d(n,t),d(s,t)}}}const B={title:"AURA/Skeleton",component:_,tags:["autodocs"],argTypes:{width:{control:"input:number"},height:{control:"input:number"}}};class F extends b{constructor(e){super(),D(this,e,null,z,A,{})}}const k=U(F,{meta:{title:"AURA/Skeleton",tags:["autodocs"]},stories:{"tpl:default":{name:"default",template:!0,source:"<Skeleton {...args} />",hasArgs:!0},DefaultSkeleton:{name:"Default Skeleton",template:!1,source:"",hasArgs:!1},CustomSkeleton:{name:"Custom Skeleton",template:!1,source:"",hasArgs:!1}},allocatedIds:["default","Story","Template"]},B),L=k.meta,N=["DefaultSkeleton","CustomSkeleton"],P=k.stories.DefaultSkeleton,Q=k.stories.CustomSkeleton;export{Q as CustomSkeleton,P as DefaultSkeleton,N as __namedExportsOrder,L as default};
