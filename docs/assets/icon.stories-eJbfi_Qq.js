import{a as C,b as y}from"./template-C5pUc83R.js";import{p as O,P as u,Q,f as j,g as e,b as t,a as U,n as B,m as v,c as N,s as o,d as G}from"./context-BfhkX6rd.js";import{e as H,i as J}from"./each-BGwqWmJe.js";import{s as x}from"./attributes-4wyH5dpJ.js";import{i as K,s as W}from"./props-CgGvPJjk.js";import{c as X,d as Y}from"./create-runtime-stories-BJ0hYoZB.js";import{I as $}from"./icon-D8k1pbkX.js";import{T as Z}from"./tooltip-dQ_7pDwO.js";import{T as ee}from"./text-field-BwcSskaN.js";import{D as oe}from"./dropdown-C-9L9cFK.js";import"./class-PipbczXD.js";import"./attributes-Jce5emvo.js";import"./index-D-8MO0q_.js";import"./index-BHYIh-Xd.js";import"./_commonjsHelpers-Cpj98o6Y.js";import"./slot-CgV10kGK.js";import"./style-PwPRnE0L.js";import"./this-Bqe2ILUQ.js";import"./index-DUolvyrz.js";import"./float-CBas9yJo.js";import"./index-client-EFo6zC36.js";import"./form-item-X9RiDdnD.js";const ae=["large","medium","small"],l=(_,g=B)=>{$(_,W(g))},re={title:"AURA/Icon",component:$,tags:["autodocs"],argTypes:{name:{control:"text"},size:{control:"select",options:ae}}},{Story:n}=Y();var te=y("<aura-option>small</aura-option> <aura-option>medium</aura-option> <aura-option>large</aura-option>",3),ne=y('<div style="min-height: 300px;"><div style="display: flex; gap: 10px;"><!> <!></div> <div style="display: flex; gap: 10px; margin-top: 30px;"></div></div>'),se=y("<!> <!> <!> <!> <!> <!> <!>",1);function R(_,g){O(g,!1);const i=v(),r=v(),w=v();let f=v([]);(async()=>{const D=await(await fetch("/aura/icons/meta.json")).json();t(f,Array.from(new Set(D.icons.map(m=>m.name))))})(),u(()=>{},()=>{t(i,"large")}),u(()=>{},()=>{t(r,"")}),u(()=>e(r),()=>{console.log(e(r))}),u(()=>(e(f),e(r)),()=>{t(w,e(f).filter(c=>c.includes(e(r))))}),Q(),K();var S=se(),z=j(S);n(z,{name:"All",children:(c,D)=>{var m=ne(),P=N(m),k=N(P);ee(k,{placeholder:"Type icon name...",get value(){return e(r)},set value(a){t(r,a)},$$events:{keyup:a=>{t(r,a.detail.value)}},$$legacy:!0});var q=o(k,2);oe(q,{style:"flex: 1; max-width: 100px;",get currentValue(){return e(i)},$$events:{change:a=>{t(i,a.detail.value)}},children:(a,I)=>{var p=te(),d=j(p);x(d,"value","small");var h=o(d,2);x(h,"value","medium");var F=o(h,2);x(F,"value","large"),C(a,p)},$$slots:{default:!0}});var E=o(P,2);H(E,5,()=>e(w),J,(a,I)=>{const p=G(()=>`Icon Name: ${e(I)}`);Z(a,{placement:"top",get content(){return e(p)},children:(d,h)=>{$(d,{get name(){return e(I)},get size(){return e(i)}})},$$slots:{default:!0}})}),C(c,m)},$$slots:{default:!0},parameters:{__svelteCsf:{rawCode:`<div style="min-height: 300px;">
	<div style="display: flex; gap: 10px;">
		<TextField bind:value={iconSearch} on:keyup={(evt) => {
iconSearch = evt.detail.value;
}} placeholder="Type icon name..." />
		<Dropdown style="flex: 1; max-width: 100px;" on:change={(evt) => {
size = evt.detail.value;
}} currentValue={size}>
			<aura-option value="small">small</aura-option> <aura-option value="medium">medium</aura-option> <aura-option value="large">large</aura-option>
		</Dropdown>
	</div>
	<div style="display: flex; gap: 10px; margin-top: 30px;">
		{#each iconList as icon}
			<Tooltip placement="top" content={\`Icon Name: \${icon}\`}>
				<Icon name={icon} {size} />
			</Tooltip>
		{/each}
	</div>
</div>`}}});var M=o(z,2);n(M,{name:"Small Icon",args:{name:"arrow-circle-left",size:"small"},children:l,parameters:{__svelteCsf:{rawCode:"<Icon {...args} />"}}});var L=o(M,2);n(L,{name:"Medium Icon",args:{name:"arrow-circle-left",size:"medium"},children:l,parameters:{__svelteCsf:{rawCode:"<Icon {...args} />"}}});var T=o(L,2);n(T,{name:"Large Icon",args:{name:"arrow-circle-left",size:"large"},children:l,parameters:{__svelteCsf:{rawCode:"<Icon {...args} />"}}});var b=o(T,2);n(b,{name:"Small Icon Color",args:{name:"microsoft-color",size:"small"},children:l,parameters:{__svelteCsf:{rawCode:"<Icon {...args} />"}}});var A=o(b,2);n(A,{name:"Medium Icon Color",args:{name:"microsoft-color",size:"medium"},children:l,parameters:{__svelteCsf:{rawCode:"<Icon {...args} />"}}});var V=o(A,2);n(V,{name:"Large Icon Color",args:{name:"microsoft-color",size:"large"},children:l,parameters:{__svelteCsf:{rawCode:"<Icon {...args} />"}}}),C(_,S),U()}R.__docgen={version:3,name:"icon.stories.svelte",data:[],computed:[],methods:[],components:[],description:null,keywords:[],events:[],slots:[],refs:[]};const s=X(R,re),be=["All","SmallIcon","MediumIcon","LargeIcon","SmallIconColor","MediumIconColor","LargeIconColor"],Ae=s.All,De=s.SmallIcon,Pe=s.MediumIcon,ke=s.LargeIcon,je=s.SmallIconColor,Ne=s.MediumIconColor,Re=s.LargeIconColor;export{Ae as All,ke as LargeIcon,Re as LargeIconColor,Pe as MediumIcon,Ne as MediumIconColor,De as SmallIcon,je as SmallIconColor,be as __namedExportsOrder,re as default};
