import{S as F,i as G,s as H,c as A,a as y,m as S,t as I,b as w,d as x,e as J,f as K,g as Q,h as W,j as X,k as Y,n as Z}from"./index-DugT0KW2.js";import{s as z,c as M,i as C,d as _,e as O,a as V,b as R,f as T,g as k,w as ee,h as U,j as E}from"./lifecycle-WtsT-gpG.js";import{g as te,a as ne}from"./spread-CgU5AtxT.js";import{I as N}from"./button-BvPF4zSk.js";import{p as oe,T as ae,S as b}from"./collect-stories-DjElEmSn.js";import{I as se}from"./input-C5IAzIt1.js";import{D as le}from"./dropdown-DHrLpd1i.js";import"./progress-ring-BRrKBndJ.js";import"./form-item-Dt_f2P7t.js";function P(m){return(m==null?void 0:m.length)!==void 0?m:Array.from(m)}const re=["large","medium","small"];function q(m,t,a){const n=m.slice();return n[8]=t[a],n}function me(m){let t,a;const n=[m[11]];let l={};for(let s=0;s<n.length;s+=1)l=J(l,n[s]);return t=new N({props:l}),{c(){A(t.$$.fragment)},l(s){y(t.$$.fragment,s)},m(s,c){S(t,s,c),a=!0},p(s,c){const p=c&2048?te(n,[ne(s[11])]):{};t.$set(p)},i(s){a||(I(t.$$.fragment,s),a=!0)},o(s){w(t.$$.fragment,s),a=!1},d(s){x(t,s)}}}function ie(m){let t,a="small",n,l,s="medium",c,p,g="large";return{c(){t=O("aura-option"),t.textContent=a,n=z(),l=O("aura-option"),l.textContent=s,c=z(),p=O("aura-option"),p.textContent=g,this.h()},l(i){t=V(i,"AURA-OPTION",{value:!0,"data-svelte-h":!0}),U(t)!=="svelte-7wzt78"&&(t.textContent=a),n=M(i),l=V(i,"AURA-OPTION",{value:!0,"data-svelte-h":!0}),U(l)!=="svelte-1dhlgli"&&(l.textContent=s),c=M(i),p=V(i,"AURA-OPTION",{value:!0,"data-svelte-h":!0}),U(p)!=="svelte-ho9hwk"&&(p.textContent=g),this.h()},h(){E(t,"value","small"),E(l,"value","medium"),E(p,"value","large")},m(i,h){C(i,t,h),C(i,n,h),C(i,l,h),C(i,c,h),C(i,p,h)},p:Z,d(i){i&&(_(t),_(n),_(l),_(c),_(p))}}}function B(m){let t,a;return t=new N({props:{name:m[8],size:m[2]}}),{c(){A(t.$$.fragment)},l(n){y(t.$$.fragment,n)},m(n,l){S(t,n,l),a=!0},p(n,l){const s={};l&2&&(s.name=n[8]),l&4&&(s.size=n[2]),t.$set(s)},i(n){a||(I(t.$$.fragment,n),a=!0)},o(n){w(t.$$.fragment,n),a=!1},d(n){x(t,n)}}}function ce(m){let t,a,n,l,s,c,p,g,i;function h(o){m[4](o)}let d={placeholder:"Type icon name..."};m[0]!==void 0&&(d.value=m[0]),n=new se({props:d}),K.push(()=>Q(n,"value",h)),n.$on("keyup",m[5]),c=new le({props:{style:"flex: 1; max-width: 100px;",currentValue:m[2],$$slots:{default:[ie]},$$scope:{ctx:m}}}),c.$on("change",m[6]);let v=P(m[1]),r=[];for(let o=0;o<v.length;o+=1)r[o]=B(q(m,v,o));const D=o=>w(r[o],1,1,()=>{r[o]=null});return{c(){t=O("div"),a=O("div"),A(n.$$.fragment),s=z(),A(c.$$.fragment),p=z(),g=O("div");for(let o=0;o<r.length;o+=1)r[o].c();this.h()},l(o){t=V(o,"DIV",{style:!0});var f=R(t);a=V(f,"DIV",{style:!0});var e=R(a);y(n.$$.fragment,e),s=M(e),y(c.$$.fragment,e),e.forEach(_),p=M(f),g=V(f,"DIV",{style:!0});var u=R(g);for(let $=0;$<r.length;$+=1)r[$].l(u);u.forEach(_),f.forEach(_),this.h()},h(){T(a,"display","flex"),T(a,"gap","10px"),T(g,"display","flex"),T(g,"gap","10px"),T(g,"margin-top","30px"),T(t,"min-height","300px")},m(o,f){C(o,t,f),k(t,a),S(n,a,null),k(a,s),S(c,a,null),k(t,p),k(t,g);for(let e=0;e<r.length;e+=1)r[e]&&r[e].m(g,null);i=!0},p(o,f){const e={};!l&&f&1&&(l=!0,e.value=o[0],W(()=>l=!1)),n.$set(e);const u={};if(f&4&&(u.currentValue=o[2]),f&4096&&(u.$$scope={dirty:f,ctx:o}),c.$set(u),f&6){v=P(o[1]);let $;for($=0;$<v.length;$+=1){const j=q(o,v,$);r[$]?(r[$].p(j,f),I(r[$],1)):(r[$]=B(j),r[$].c(),I(r[$],1),r[$].m(g,null))}for(X(),$=v.length;$<r.length;$+=1)D($);Y()}},i(o){if(!i){I(n.$$.fragment,o),I(c.$$.fragment,o);for(let f=0;f<v.length;f+=1)I(r[f]);i=!0}},o(o){w(n.$$.fragment,o),w(c.$$.fragment,o),r=r.filter(Boolean);for(let f=0;f<r.length;f+=1)w(r[f]);i=!1},d(o){o&&_(t),x(n),x(c),ee(r,o)}}}function ue(m){let t,a,n,l,s,c,p,g,i,h,d,v,r,D,o,f;return t=new ae({props:{$$slots:{default:[me,({args:e})=>({11:e}),({args:e})=>e?2048:0]},$$scope:{ctx:m}}}),n=new b({props:{name:"All",$$slots:{default:[ce]},$$scope:{ctx:m}}}),s=new b({props:{name:"Small Icon",args:{name:"arrow-circle-left",size:"small"}}}),p=new b({props:{name:"Medium Icon",args:{name:"arrow-circle-left",size:"medium"}}}),i=new b({props:{name:"Large Icon",args:{name:"arrow-circle-left",size:"large"}}}),d=new b({props:{name:"Small Icon Color",args:{name:"microsoft-color",size:"small"}}}),r=new b({props:{name:"Medium Icon Color",args:{name:"microsoft-color",size:"medium"}}}),o=new b({props:{name:"Large Icon Color",args:{name:"microsoft-color",size:"large"}}}),{c(){A(t.$$.fragment),a=z(),A(n.$$.fragment),l=z(),A(s.$$.fragment),c=z(),A(p.$$.fragment),g=z(),A(i.$$.fragment),h=z(),A(d.$$.fragment),v=z(),A(r.$$.fragment),D=z(),A(o.$$.fragment)},l(e){y(t.$$.fragment,e),a=M(e),y(n.$$.fragment,e),l=M(e),y(s.$$.fragment,e),c=M(e),y(p.$$.fragment,e),g=M(e),y(i.$$.fragment,e),h=M(e),y(d.$$.fragment,e),v=M(e),y(r.$$.fragment,e),D=M(e),y(o.$$.fragment,e)},m(e,u){S(t,e,u),C(e,a,u),S(n,e,u),C(e,l,u),S(s,e,u),C(e,c,u),S(p,e,u),C(e,g,u),S(i,e,u),C(e,h,u),S(d,e,u),C(e,v,u),S(r,e,u),C(e,D,u),S(o,e,u),f=!0},p(e,[u]){const $={};u&6144&&($.$$scope={dirty:u,ctx:e}),t.$set($);const j={};u&4103&&(j.$$scope={dirty:u,ctx:e}),n.$set(j)},i(e){f||(I(t.$$.fragment,e),I(n.$$.fragment,e),I(s.$$.fragment,e),I(p.$$.fragment,e),I(i.$$.fragment,e),I(d.$$.fragment,e),I(r.$$.fragment,e),I(o.$$.fragment,e),f=!0)},o(e){w(t.$$.fragment,e),w(n.$$.fragment,e),w(s.$$.fragment,e),w(p.$$.fragment,e),w(i.$$.fragment,e),w(d.$$.fragment,e),w(r.$$.fragment,e),w(o.$$.fragment,e),f=!1},d(e){e&&(_(a),_(l),_(c),_(g),_(h),_(v),_(D)),x(t,e),x(n,e),x(s,e),x(p,e),x(i,e),x(d,e),x(r,e),x(o,e)}}}const fe={title:"AURA/Icon",component:N,tags:["autodocs"],argTypes:{name:{control:"text"},size:{control:"select",options:re}}};function pe(m,t,a){let n,l,s,c=[];(async()=>{const v=await(await fetch("/aura/icons/meta.json")).json();a(3,c=Array.from(new Set(v.icons.map(r=>r.name))))})();function g(d){l=d,a(0,l)}const i=d=>{a(0,l=d.detail.value)},h=d=>{a(2,n=d.detail.value)};return m.$$.update=()=>{m.$$.dirty&1&&console.log(l),m.$$.dirty&9&&a(1,s=c.filter(d=>d.includes(l)))},a(2,n="large"),a(0,l=""),[l,s,n,c,g,i,h]}class $e extends F{constructor(t){super(),G(this,t,pe,ue,H,{})}}const L=oe($e,{meta:{title:"AURA/Icon",tags:["autodocs"]},stories:{"tpl:default":{name:"default",template:!0,source:"<Icon {...args} />",hasArgs:!0},All:{name:"All",template:!1,source:`<div style="min-height: 300px;">
	<div style="display: flex; gap: 10px;">
		<Input
			bind:value={iconSearch}
			on:keyup={(evt) => {
				iconSearch = evt.detail.value;
			}}
			placeholder="Type icon name..."
		/>
		<Dropdown
			style="flex: 1; max-width: 100px;"
			on:change={(evt) => {
				size = evt.detail.value;
			}}
			currentValue={size}
		>
			<aura-option value="small">small</aura-option>
			<aura-option value="medium">medium</aura-option>
			<aura-option value="large">large</aura-option>
		</Dropdown>
	</div>
	<div style="display: flex; gap: 10px; margin-top: 30px;">
		{#each iconList as icon}
			<Icon name={icon} {size} />
		{/each}
	</div>
</div>`,hasArgs:!1},SmallIcon:{name:"Small Icon",template:!1,source:"",hasArgs:!1},MediumIcon:{name:"Medium Icon",template:!1,source:"",hasArgs:!1},LargeIcon:{name:"Large Icon",template:!1,source:"",hasArgs:!1},SmallIconColor:{name:"Small Icon Color",template:!1,source:"",hasArgs:!1},MediumIconColor:{name:"Medium Icon Color",template:!1,source:"",hasArgs:!1},LargeIconColor:{name:"Large Icon Color",template:!1,source:"",hasArgs:!1}},allocatedIds:["default","Story","Template","Input","Dropdown"]},fe),ye=L.meta,Se=["All","SmallIcon","MediumIcon","LargeIcon","SmallIconColor","MediumIconColor","LargeIconColor"],xe=L.stories.All,ze=L.stories.SmallIcon,Me=L.stories.MediumIcon,Le=L.stories.LargeIcon,be=L.stories.SmallIconColor,De=L.stories.MediumIconColor,Te=L.stories.LargeIconColor;export{xe as All,Le as LargeIcon,Te as LargeIconColor,Me as MediumIcon,De as MediumIconColor,ze as SmallIcon,be as SmallIconColor,Se as __namedExportsOrder,ye as default};
